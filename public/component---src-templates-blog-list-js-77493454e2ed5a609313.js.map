{"version":3,"sources":["webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js"],"names":["PaginationWrapper","styled","section","Pagination","isFirst","isLast","prevPage","nextPage","to","query","BlogList","props","postList","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","Layout","title","map","node","frontmatter","image","titleImage","date","description","timeToRead","slug","fields","PostItem"],"mappings":"2KAMMA,E,UAAoBC,EAAOC,QAAV,oFAAGD,CAAH,6OAsCRE,EAnBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,QACAC,EAFiB,EAEjBA,OACAC,EAHiB,EAGjBA,SACAC,EAJiB,EAIjBA,SAJiB,OAMf,kBAACP,EAAD,MACII,GAAW,kBAAC,OAAD,CAAMI,GAAIF,GAAV,WACXD,GAAU,kBAAC,OAAD,CAAMG,GAAID,GAAV,YCjClB,sCAQA,IA0CaE,EAAK,aA0BHC,UApEE,SAAAC,GACf,IAAMC,EAAWD,EAAME,KAAKC,kBAAkBC,MADtB,EAGUJ,EAAMK,YAAhCC,EAHgB,EAGhBA,YACFb,EAA0B,IAAhBa,EACVZ,EAASY,IALS,EAGHC,SAGfZ,EAAWW,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChEV,EAAQ,UAAYU,EAAc,GAExC,OACE,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SAEVR,EAASS,KACR,oBACEC,KADF,IAEIC,YAAeC,EAFnB,EAEmBA,MAAOC,EAF1B,EAE0BA,WAAYC,EAFtC,EAEsCA,KAAMC,EAF5C,EAE4CA,YAAaP,EAFzD,EAEyDA,MACrDQ,EAHJ,EAGIA,WACUC,EAJd,EAIIC,OAAUD,KAJd,OAOI,kBAACE,EAAA,EAAD,CACEF,KAAMA,EACNL,MAAOA,EACPC,WAAYA,EACZC,KAAMA,EACNE,WAAYA,EACZR,MAAOA,EACPO,YAAaA,OAIrB,kBAAC,EAAD,CACEvB,QAASA,EACTC,OAAQA,EACRC,SAAUA,EACVC,SAAUA","file":"component---src-templates-blog-list-js-77493454e2ed5a609313.js","sourcesContent":["import React from \"react\"\nimport propTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport styled from \"styled-components\"\n\nconst PaginationWrapper = styled.section`\n  align-items: center;\n  margin: 20px 0;\n  color: #8899a6;\n  text-align: center;\n  padding: 1.5rem 3rem;\n  justify-content: space-between;\n  a {\n    color: #8899a6;\n    text-decoration: none;\n    transition: color 0.5s;\n    font-size: 18px;\n    margin-right: 20px;\n    &:hover {\n      color: #1fa1f2;\n    }\n  }\n`\n\nconst Pagination = ({\n  isFirst,\n  isLast,\n  prevPage,\n  nextPage,\n}) => (\n    <PaginationWrapper>\n      {!isFirst && <Link to={prevPage}>← Prev</Link>}\n      {!isLast && <Link to={nextPage}>Next →</Link>}\n    </PaginationWrapper>\n  )\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  prevPage: propTypes.string,\n  nextPage: propTypes.string,\n}\n\nexport default Pagination","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport PostItem from \"../components/PostItem\"\nimport Pagination from \"../components/Pagination\"\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges\n\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`\n  const nextPage = `/page/${currentPage + 1}`\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n\n      {postList.map(\n        ({\n          node: {\n            frontmatter: { image, titleImage, date, description, title },\n            timeToRead,\n            fields: { slug },\n          },\n        }) => (\n            <PostItem\n              slug={slug}\n              image={image}\n              titleImage={titleImage}\n              date={date}\n              timeToRead={timeToRead}\n              title={title}\n              description={description}\n            />\n          )\n      )}\n      <Pagination\n        isFirst={isFirst}\n        isLast={isLast}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\", locale: \"en-us\")\n            image\n            title\n            titleImage\n            description\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default BlogList"],"sourceRoot":""}