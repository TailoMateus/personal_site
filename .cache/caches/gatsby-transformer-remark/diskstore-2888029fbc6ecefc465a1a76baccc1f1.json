{"expireTime":9007200834369475000,"key":"transformer-remark-markdown-html-60cbc1db320b862c2467886a2dd9687b-gatsby-remark-relative-imagesgatsby-remark-imagesgatsby-remark-lazy-loadgatsby-remark-prismjs-","val":"<p>Seja bem vindo a série Iniciando projeto com laravel, na primeira parte veremos como criar um projeto, as principais pastas da estrutura e configuração do banco de dados.</p>\n<h2>CONFIGURAÇÕES GERAIS</h2>\n<p>Para iniciarmos precisamos configurar algumas coisas.</p>\n<p>Como o foco não é banco de dados, utilizaremos o xampp. Você pode baixá-lo aqui: <a href=\"https://www.apachefriends.org/pt_br/download.html\">https://www.apachefriends.org/pt_br/download.html</a></p>\n<p>Para configurar o laravel:</p>\n<p>Windows: <a href=\"https://gist.github.com/Turini/4949f23350ae2297c933\">https://gist.github.com/Turini/4949f23350ae2297c933</a></p>\n<p>Linux: <a href=\"https://gist.github.com/Turini/843fa49af3ada5599c69\">https://gist.github.com/Turini/843fa49af3ada5599c69</a></p>\n<p>Mac: <a href=\"https://gist.github.com/Turini/94ed27b4f169c66349d2\">https://gist.github.com/Turini/94ed27b4f169c66349d2</a></p>\n<h2>CRIANDO O PROJETO</h2>\n<p>Muito bem, agora que tudo esta configurado, abra seu terminal. Digite laravel new NomeProjeto. Pronto, isso mesmo, seu projeto já esta criado. Para testá-lo, inicie seu apache do xampp e digite no terminal php artisan serve, nesse momento já pode testar sua aplicação em localhost.</p>\n<p>Mas o que é esse artisan? Bom, ele é uma ferramenta de linha de comando, inclusa no framework.</p>\n<p>Maiores informações sobre o artisan e os comandos inclusos, pode consultar <a href=\"https://laravel.com/docs/5.4/artisan\">https://laravel.com/docs/5.4/artisan</a></p>\n<h2>ESTRUTURAS DE PASTAS</h2>\n<p>Após criar o projeto, várias pastas foram criadas, vou comentar sobre as mais importantes.</p>\n<p>app: Aqui fica o código principal da sua aplicação, seus modelos e controllers.</p>\n<p>config: Nessa pasta fica toda a configuração, como, banco de dados, e-mails, entre outros.</p>\n<p>public: Geralmente aqui fica seu arquivo index.php, as imagens, css e o js.</p>\n<p>vendor: Possui o source code do laravel, plugins e dependências. Tudo que for usado de terceiros, como, frameworks e bibliotecas devem ficar aqui.</p>\n<p>Você pode descobrir mais sobre a estrutura aqui <a href=\"https://laravel.com/docs/5.4/structure\">https://laravel.com/docs/5.4/structure</a></p>\n<h2>BANCO DE DADOS</h2>\n<p>O laravel tem interações possíveis com 4 bancos de dados, entre eles, MySQL, Postgres, SQLite, SQL Server. Na versão atual 5.4, o default é o MySQL. Toda a configuração fica na pasta config e no arquivo database.php. E tudo fica em um array como este:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;mysql&#39; =&amp;gt; [\n&#39;driver&#39; =&amp;gt; &#39;mysql&#39;,\n&#39;host&#39; =&amp;gt; env(&#39;DB_HOST&#39;, &#39;localhost&#39;),\n&#39;database&#39; =&amp;gt; env(&#39;DB_DATABASE&#39;, &#39;NomeDoBanco&#39;),\n&#39;username&#39; =&amp;gt; env(&#39;DB_USERNAME&#39;, &#39;root&#39;),\n&#39;password&#39; =&amp;gt; env(&#39;DB_PASSWORD&#39;, &#39;&#39;),\n]</code></pre></div>\n<p>Basicamente, é aqui que você deve inserir os seus dados. Além dessas chaves, é possível configurar outras, que não serão mencionadas nesse artigo, mas que podem ser vistas aqui <a href=\"https://laravel.com/docs/5.4/database\">https://laravel.com/docs/5.4/database</a></p>\n<p>OBS: Em um projeto real, o ideal é colocar as configurações do banco de dados no arquivo .env, esse arquivo é mantido fora do controle de versão. Dessa forma, cada desenvolvedor vai possuir seu próprio arquivo e mantém as configurações do servidor em produção de forma sigilosa.</p>\n<p>Para saber mais: <a href=\"https://laravel.com/docs/5.4/configuration\">https://laravel.com/docs/5.4/configuration</a></p>\n<h2>CONCLUSÃO</h2>\n<p>Para iniciar um projeto é muito simples, com poucos passos já esta tudo configurado. Ele facilita muito o desenvolvimento, deixando o processo mais veloz. Nada impede de fazer com php puro, mas caso queira economizar algum tempo, esse framework se torna uma boa forma, nas referências, deixo algumas razões para usá-lo. Ficamos por aqui, nas próximas partes veremos como configurar e manipular as rotas, detalhar como funciona o padrão MVC (Model, View, Controller) no laravel.</p>\n<h2>PARA SABER MAIS:</h2>\n<p>Criando um projeto: <a href=\"https://laravel-recipes.com/recipes/30/creating-a-laravel-project\">https://laravel-recipes.com/recipes/30/creating-a-laravel-project</a></p>\n<p>Documentação do framework: <a href=\"https://laravel.com/docs/5.4\">https://laravel.com/docs/5.4</a></p>\n<p>O que é o laravel: <a href=\"https://code.tutsplus.com/tutorials/getting-started-with-laravel--cms-25386\">https://code.tutsplus.com/tutorials/getting-started-with-laravel--cms-25386</a></p>\n<p>10 razões para usar laravel: <a href=\"https://acadtec.com.br/site/blog/item/61-10-razoes-para-usar-laravel.html\">https://acadtec.com.br/site/blog/item/61-10-razoes-para-usar-laravel.html</a></p>\n<p>Arquivo .env: <a href=\"https://pt.stackoverflow.com/questions/156660/laravel-5-arquivo-env\">https://pt.stackoverflow.com/questions/156660/laravel-5-arquivo-env</a></p>"}