{"componentChunkName":"component---src-templates-blog-post-js","path":"/ferramentas-desenvolvedor-react-2019/","result":{"data":{"markdownRemark":{"fields":{"slug":"/ferramentas-desenvolvedor-react-2019/"},"frontmatter":{"title":"As ferramentas do desenvolvedor React em 2019","description":"Ferramentas úteis para otimizar o fluxo de trabalho do React em 2019","image":"https://cdn-images-1.medium.com/max/1600/1*vHHBwcUFUaHWXntSnqKdCA.png","date":"January 22, 2019"},"html":"<p>Aparentemente, este ano será mais um ano de crescimento para o React e seu ecossistema, que vem crescendo rapidamente.</p>\n<p>Esse pode ser um bom momento para ver alguns dos melhores recursos, ferramentas e bibliotecas a serem introduzidos no seu fluxo de trabalho do React, para aproveitar ao máximo. Todos estes são de código aberto, então sinta-se à vontade para ir em frente.</p>\n<p>Esperamos que essas ótimas ferramentas possam ajudar a acelerar seu fluxo de trabalho e abrir as portas para novos recursos em 2019. Sinta-se à vontade para adicionar suas próprias sugestões e experiências.</p>\n<h3>Bibliotecas de componentes</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*wZMjYVLM5VZPoBhD6518Vw.jpeg\"></p>\n<p>Muitas bibliotecas disponibilizam componentes no React, projetos da comunidade à bibliotecas criadas por empresas. Abaixo você pode ver algumas das bibliotecas mais famosas.</p>\n<p><strong>Algumas das melhores</strong> : <a href=\"https://github.com/mui-org/material-ui\">React Material-UI</a>, <a href=\"https://github.com/grommet/grommet\">Grommet 2.0</a>, <a href=\"https://github.com/react-bootstrap/react-bootstrap\">React Bootstrap</a>, <a href=\"https://github.com/reactstrap/reactstrap\">Reactstrap</a>, <a href=\"https://github.com/primefaces/primereact\">Prime React</a>, <a href=\"https://github.com/elementalui/elemental\">Elemental-UI</a>, <a href=\"https://github.com/Semantic-Org/Semantic-UI-React\">Semantic-UI</a>.</p>\n<ul>\n<li><a href=\"https://hackernoon.com/23-best-react-ui-component-libraries-and-frameworks-250a81b2ac42\">23 Best React UI Component Frameworks</a></li>\n</ul>\n<h3>Componentes de estilo</h3>\n<p>Em 2018, houve muita discussão sobre o estilo de componentes usando CSS em JS e <a href=\"https://github.com/styled-components/styled-components\">styled-components</a> para Sass, Less, CSS modules, CSS Inline e até mesmo projetos como Stylable.</p>\n<p>Qual utilizar é uma questão de preferência pessoal e as necessidades da arquitetura da sua aplicação, então a escolha é sua. Você pode encontrar a discussão completa aqui abaixo, com uma revisão mais profunda de prós e contras para cada escolha que você faz. Dê uma olhada.</p>\n<ul>\n<li>Veja também: <a href=\"https://blog.bitsrc.io/9-css-in-js-libraries-you-should-know-in-2018-25afb4025b9b\">9 CSS em bibliotecas JS para 2019</a></li>\n</ul>\n<h3>Gerenciamento de estado</h3>\n<p>Um tópico doloroso que foi um grande debate (ou rixa) em 2018. Agora a Store está aberta para negócios (desculpe por isso) e diferentes ferramentas estão ficando mais comuns. </p>\n<p>Entre as ferramentas populares, você pode encontrar <a href=\"https://github.com/jamiebuilds/unstated\">Unstated</a>, e <a href=\"https://github.com/mobxjs/mobx\">Mobx,</a>** **que incorpora o paradigma de componentes encapsulados do React. Também a nova <a href=\"https://blog.bitsrc.io/react-context-api-a-replacement-for-redux-6e20790492b3\">API de Contexto,</a> que é uma alternativa promissora para o <a href=\"https://redux.js.org/\">Redux</a>.</p>\n<ul>\n<li><a href=\"https://blog.bitsrc.io/state-of-react-state-management-in-2019-779647206bbc\">State of React State Management for 2019</a></li>\n</ul>\n<h3>Testes</h3>\n<p>A pesquisa <a href=\"https://blog.bitsrc.io/top-javascript-testing-frameworks-in-demand-for-2019-90c76e7777e9\">“State of JS” de 2018</a> lista as estruturas de testes mais solicitadas em 2019, com estruturas de testes populares como <a href=\"https://jestjs.io/\">Jest</a>, <a href=\"https://mochajs.org/\">Mocha</a>, <a href=\"https://karma-runner.github.io/2.0/index.html\">Karma</a> e outras, para tornar o TDD mais simples no nível de componente.</p>\n<p>Aqui estão alguns guias úteis e profundos para testar componentes do React com a Jest &#x26; Enzyme, que é provavelmente a melhor combinação para apostar no desenvolvimento da maioria das aplicações React deste ano. Dê uma olhada.</p>\n<ul>\n<li><a href=\"https://blog.bitsrc.io/how-to-test-react-components-with-jest-and-enzyme-in-depth-145fcd06b90\">Testing React Components with Jest and Enzyme- In Depth</a></li>\n<li><a href=\"https://blog.bitsrc.io/how-to-test-react-components-using-jest-and-enzyme-fab851a43875\">How to Test React Components using Jest and Enzyme</a></li>\n</ul>\n<h3>Boilerplates</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*rqyYOhFVVrMDJ-4p5rk3LA.gif\"></p>\n<p>Com o lançamento do <a href=\"https://blog.bitsrc.io/introducing-create-react-app-version-2-0-6667aee5db17\">create-react-app 2.0</a>, parece que esse boilerplate de React continua sendo o projeto mais popular e\nrecomendado que existe. No entanto, também vale a pena dar uma olhada em projetos como o <a href=\"https://github.com/react-boilerplate/react-boilerplate\">React-Boilerplate</a> e o <a href=\"https://github.com/coryhouse/react-slingshot\">React Slingshot,</a> que oferecem uma alternativa para diferentes casos de uso.</p>\n<h3>React Hooks e API de Contexto</h3>\n<p>Embora muitos novos recursos tenham sido introduzidos no React em 2018, talvez dois são os mais significativos em termos de discussão da comunidade. A primeira é a API de Contexto do React que, após um longo período de espera, é oficializada e entra em jogo como um potencial substituto do Redux. O segundo é o React Hooks<strong>,</strong> que permite usar o estado e outros recursos do React sem escrever uma classe, o que contribui para o gerenciamento de estados e muito mais.</p>\n<p><strong>API de contexto</strong></p>\n<ul>\n<li><a href=\"https://blog.bitsrc.io/react-context-api-a-replacement-for-redux-6e20790492b3\">React Context API — A Replacement for Redux?</a></li>\n<li><a href=\"https://blog.bitsrc.io/why-you-should-consider-the-new-context-api-in-react-a-deep-dive-d588b66c57b5\">Why you should consider the new Context API in React? — A deep dive</a></li>\n</ul>\n<p><strong>Hooks</strong></p>\n<ul>\n<li><a href=\"https://blog.bitsrc.io/understanding-hooks-in-react-a-deep-dive-d5d5dc88ecd9\">Understanding Hooks in React</a></li>\n<li><a href=\"https://blog.bitsrc.io/understanding-react-hooks-usestate-6627120614ab\">Understanding React Hooks — useState</a></li>\n</ul>\n<h3>Depuração</h3>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*kBdE2EsYc0zftvj4iUb7sQ.gif\"></p>\n<p>Bem, não há muita novidade aqui, pois o React dev-tools e o Redux dev-tools ainda fazem o trabalho rápido e simples. A <a href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en\">extensão</a> React dev-tools permite que você inspecione as hierarquias dos componentes, e até mesmo veja como as alterações nos componentes afetam outros componentes.</p>\n<p>A <a href=\"https://github.com/zalmoxisus/redux-devtools-extension\">extensão</a> dev-tools do Redux permite inspecionar cada estado e ações. Você pode ter várias lojas ou instâncias diferentes para cada estado local do componente.</p>\n<h3>Geradores de site estático</h3>\n<p>React trouxe uma nova era para a composição de websites estáticos baseados em componentes, com novas estruturas como <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> e <a href=\"https://github.com/nozzle/react-static\">React static</a>. Essas bibliotecas aproveitam os componentes e a capacidade de fornecer uma experiência rápida, flexível e poderosa para a criação de sites estáticos. Aqui está uma revisão completa de 9 bibliotecas para olhar em 2019.</p>\n<ul>\n<li><a href=\"https://blog.bitsrc.io/9-react-static-site-generators-for-2019-f54a66e519d2\">9 React Static Site Generators for 2019</a></li>\n</ul>\n<h3>Conclusão</h3>\n<p>O ecossistema React está se movendo rapidamente, assim como o ecossistema geral em torno de componentes. À medida que as mudanças fluem, novas oportunidades e ferramentas surgem para nos fornecer novos recursos que podem não apenas acelerar a maneira como construímos software, mas também mudar o software que construímos. Podemos melhorar a capacidade de reutilização, cobertura de teste, reduzir erros, tamanho de pacote e assim por diante.</p>\n<h3>⭐️ Créditos</h3>\n<ul>\n<li><a href=\"https://hackernoon.com/the-react-developer-tools-you-should-know-in-2019-e681dc4f4332\">The React Developer Tools You Should Know in 2019</a>, escrito originalmente por <a href=\"https://hackernoon.com/@JonathanSaring\">Jonathan Saring</a></li>\n</ul>","timeToRead":5}},"pageContext":{"slug":"/ferramentas-desenvolvedor-react-2019/","previousPost":{"frontmatter":{"title":"Entendendo os componentes funcionais"},"fields":{"slug":"/entendendo-componentes-funcionais/"}},"nextPost":{"fields":{"slug":"/ambiente-para-nossos-habitos/"},"frontmatter":{"title":"Como criar um ambiente melhor para nossos hábitos"}}}}}