{"componentChunkName":"component---src-templates-blog-post-js","path":"/eslint-hooks-no-git/","result":{"data":{"markdownRemark":{"fields":{"slug":"/eslint-hooks-no-git/"},"frontmatter":{"title":"Usando ESlint e hooks no git","description":"Como mandar bem nos commits","image":"https://cdn-images-1.medium.com/max/1600/1*5ytPO1t6Dhz-RuN0NtBiJw.jpeg","date":"March 05, 2018"},"html":"<p>Quantas vezes você mandou aquele push com erros ou totalmente fora do padrão? Aquele commit faltando 5 minutos para acabar o horário de expediente.  Isso pode acontecer com qualquer pessoa, indiferente se você é um iniciante ou um “senior” que só faz coisas fantásticas. Cabe a nós melhorar as nossas limitações ou falta de atenção. O objetivo deste artigo é te ajudar nesse quesito.</p>\n<h2>Criando o package.json</h2>\n<p>Com isso, vai criar o arquivo e aceitar todos os valores default:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm init –y</code></pre></div>\n<p>Para saber mais:</p>\n<p>[Working with package.json] (<a href=\"https://docs.npmjs.com/getting-started/using-a-package.json\">https://docs.npmjs.com/getting-started/using-a-package.json</a>)</p>\n<p>[npm-init] (<a href=\"https://docs.npmjs.com/cli/init\">https://docs.npmjs.com/cli/init</a>)</p>\n<h2>Instalando ESlint</h2>\n<p>É um analisador de código JavaScript, criado em 2013 por Nicholas C. Zakas. Basicamente, ESlint permite que os desenvolvedores encontrem problemas e criem suas próprias regras e padrões de desenvolvimento. Escrito em Node.js podemos instalá-lo via npm.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install eslint --save-dev</code></pre></div>\n<p>Configurando o arquivo de configuração:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">./node_modules/.bin/eslint --init</code></pre></div>\n<p>Selecione a opção: “Use a popular style guide” e após selecione o style guide da empresa que preferir.</p>\n<p>Selecione o formato do arquivo em “JavaScript”. Após esses passos e se tudo ocorreu bem, vai ser criado o arquivo .eslintrc.js. </p>\n<h2>Testando ESlint</h2>\n<p>Crie um arquivo chamado main.js, dentro dele coloca o código:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">a = 10\nconst b = 5;\nb = 10</code></pre></div>\n<p>Ao ler o código, podemos perceber que vai acontecer alguns erros. Mas vamos testar como o ESlint se comporta, para executar:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">./node_modules/.bin/eslint *.js</code></pre></div>\n<p>Agora é só corrigir os erros :D</p>\n<p>Para saber mais: </p>\n<p>[Documentação ESlint] (<a href=\"https://eslint.org\">https://eslint.org</a>)</p>\n<p>[Demo ESlint] (<a href=\"https://eslint.org/demo/\">https://eslint.org/demo/</a>)</p>\n<p>[Setting up ESLint on Sublime Text 3] (<a href=\"https://medium.com/@junshengpierre/making-the-switch-from-jshint-to-eslint-5b6c4fa3c92a\">https://medium.com/@junshengpierre/making-the-switch-from-jshint-to-eslint-5b6c4fa3c92a</a>)</p>\n<h2>Utilizando npm Scripts</h2>\n<p>No arquivo package.json, substitua esse trecho:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">“scripts”: {\n\t“lint”: “./node_modules/.bin/eslint *.js”\n}</code></pre></div>\n<p>Para rodar no terminal:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run lint</code></pre></div>\n<p>Para saber mais:\n[Why npm Scripts? ] (<a href=\"https://css-tricks.com/why-npm-scripts/\">https://css-tricks.com/why-npm-scripts/</a>)</p>\n<h2>Hooks no git</h2>\n<p>São scripts que fazem algo antes ou depois de alguma tarefa, por exemplo, antes de um commit faça algo.</p>\n<p>Instalando o Husky:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install husky@next --save-dev</code></pre></div>\n<p>Para utilizar vamos adicionar o comando prepush no npm scripts:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">“scripts”: {\n\t“lint”: “./node_modules/.bin/eslint *.js”,\n\t“prepush”: “lint”\n}</code></pre></div>\n<p>Antes de enviarmos o push, vai executar o lint.</p>\n<p>Para saber mais:</p>\n<p>[Repositório GitHub] (<a href=\"https://github.com/typicode/husky\">https://github.com/typicode/husky</a>)</p>\n<h2>Conclusão</h2>\n<p>Espero ter ajudado. Qualquer dúvida, em todas as partes deste artigo tem referências. Tem alguma dica? Deixa nos comentários :D</p>","timeToRead":2}},"pageContext":{"slug":"/eslint-hooks-no-git/","previousPost":{"frontmatter":{"title":"Como fazer requisições ajax"},"fields":{"slug":"/como-fazer-requisicoes-ajax/"}},"nextPost":{"fields":{"slug":"/revolucao-dos-sites-com-jamstack/"},"frontmatter":{"title":"A revolução dos sites com JAMstack"}}}}}