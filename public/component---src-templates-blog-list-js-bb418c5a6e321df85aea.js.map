{"version":3,"sources":["webpack:///./src/components/PostItem/index.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js"],"names":["PostItemLink","styled","Link","PostItemWrapper","section","PostItemInfo","div","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","image","titleImage","date","timeToRead","title","description","to","width","src","alt","PaginationWrapper","Pagination","isFirst","isLast","prevPage","nextPage","query","BlogList","props","postList","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","Layout","map","node","frontmatter","fields"],"mappings":"2KAKMA,EAAeC,YAAOC,QAAV,6EAAGD,CAAH,kKAcZE,EAAkBF,IAAOG,QAAV,gFAAGH,CAAH,yDAMfI,EAAeJ,IAAOK,IAAV,6EAAGL,CAAH,2BAIZM,EAAeN,IAAOO,KAAV,6EAAGP,CAAH,4DAMZQ,EAAgBR,IAAOS,GAAV,8EAAGT,CAAH,qDAMbU,EAAsBV,IAAOW,EAAV,oFAAGX,CAAH,uDAiCVY,EA3BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,WAAYC,EAA9C,EAA8CA,MAAOC,EAArD,EAAqDA,YAArD,OACf,kBAACpB,EAAD,CAAcqB,GAAIP,GAChB,kBAACX,EAAD,KACE,yBAAKmB,MAAM,OAAOC,IAAKR,EAAOS,IAAKR,IACnC,kBAACX,EAAD,KACE,kBAACE,EAAD,KAAeU,EAAf,MAAwBC,EAAxB,mBACA,kBAACT,EAAD,KACGU,GAEH,kBAACR,EAAD,KACGS,OCnDLK,EAAoBxB,IAAOG,QAAV,oFAAGH,CAAH,6OAwCRyB,EArBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,QACAC,EAFiB,EAEjBA,OACAC,EAHiB,EAGjBA,SACAC,EAJiB,EAIjBA,SAJiB,OAMf,kBAACL,EAAD,MACIE,GAAW,kBAAC,OAAD,CAAMN,GAAIQ,GAAV,WACXD,GAAU,kBAAC,OAAD,CAAMP,GAAIS,GAAV,YCjClB,sCAQA,IA0CaC,EAAK,aA0BHC,UApEE,SAAAC,GACf,IAAMC,EAAWD,EAAME,KAAKC,kBAAkBC,MADtB,EAGUJ,EAAMK,YAAhCC,EAHgB,EAGhBA,YACFZ,EAA0B,IAAhBY,EACVX,EAASW,IALS,EAGHC,SAGfX,EAAWU,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChET,EAAQ,UAAYS,EAAc,GAExC,OACE,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKtB,MAAM,SAEVe,EAASQ,KACR,oBACEC,KADF,IAEIC,YAAe7B,EAFnB,EAEmBA,MAAOC,EAF1B,EAE0BA,WAAYC,EAFtC,EAEsCA,KAAMG,EAF5C,EAE4CA,YAAaD,EAFzD,EAEyDA,MACrDD,EAHJ,EAGIA,WACUJ,EAJd,EAII+B,OAAU/B,KAJd,OAOI,kBAAC,EAAD,CACEA,KAAMA,EACNC,MAAOA,EACPC,WAAYA,EACZC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,EACPC,YAAaA,OAIrB,kBAAC,EAAD,CACEO,QAASA,EACTC,OAAQA,EACRC,SAAUA,EACVC,SAAUA","file":"component---src-templates-blog-list-js-bb418c5a6e321df85aea.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nconst PostItemLink = styled(Link)`\n  color: #8899a6;\n  display: inline-block;\n  width: 31%;\n  padding: 20px;\n  margin: 1%;\n  box-sizing: border-box;\n  border: 1px solid #eee;\n  text-decoration: none;\n  &:hover {\n    color: #1fa1f2;\n  }\n`\n\nconst PostItemWrapper = styled.section`\n  align-items: center;\n  display: inline-block;\n  width: 100%;\n`\n\nconst PostItemInfo = styled.div`\n  display: inline-block;\n`\n\nconst PostItemDate = styled.time`\n  font-size: 0.9rem;\n  margin-top: 15px;\n  display: inline-block;\n`\n\nconst PostItemTitle = styled.h1`\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin: 20px 0;\n`\n\nconst PostItemDescription = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 1.2;\n`\n\nconst PostItem = ({ slug, image, titleImage, date, timeToRead, title, description }) => (\n  <PostItemLink to={slug}>\n    <PostItemWrapper>\n      <img width=\"100%\" src={image} alt={titleImage} />\n      <PostItemInfo>\n        <PostItemDate>{date} • {timeToRead} min de leitura</PostItemDate>\n        <PostItemTitle>\n          {title}\n        </PostItemTitle>\n        <PostItemDescription>\n          {description}\n        </PostItemDescription>\n      </PostItemInfo>\n    </PostItemWrapper>\n  </PostItemLink>\n)\n\nPostItem.propTypes = {\n  slug: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  titleImage: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n}\n\nexport default PostItem","import React from \"react\"\nimport propTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport styled from \"styled-components\"\n\nconst PaginationWrapper = styled.section`\n  align-items: center;\n  margin: 20px 0;\n  color: #8899a6;\n  text-align: center;\n  padding: 1.5rem 3rem;\n  justify-content: space-between;\n  a {\n    color: #8899a6;\n    text-decoration: none;\n    transition: color 0.5s;\n    font-size: 18px;\n    margin-right: 20px;\n    &:hover {\n      color: #1fa1f2;\n    }\n  }\n`\n\nconst Pagination = ({\n  isFirst,\n  isLast,\n  prevPage,\n  nextPage,\n}) => (\n    <PaginationWrapper>\n      {!isFirst && <Link to={prevPage}>← Prev</Link>}\n      {!isLast && <Link to={nextPage}>Next →</Link>}\n    </PaginationWrapper>\n  )\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  currentPage: propTypes.number.isRequired,\n  numPages: propTypes.number.isRequired,\n  prevPage: propTypes.string,\n  nextPage: propTypes.string,\n}\n\nexport default Pagination","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport PostItem from \"../components/PostItem\"\nimport Pagination from \"../components/Pagination\"\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges\n\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`\n  const nextPage = `/page/${currentPage + 1}`\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n\n      {postList.map(\n        ({\n          node: {\n            frontmatter: { image, titleImage, date, description, title },\n            timeToRead,\n            fields: { slug },\n          },\n        }) => (\n            <PostItem\n              slug={slug}\n              image={image}\n              titleImage={titleImage}\n              date={date}\n              timeToRead={timeToRead}\n              title={title}\n              description={description}\n            />\n          )\n      )}\n      <Pagination\n        isFirst={isFirst}\n        isLast={isLast}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\", locale: \"en-us\")\n            image\n            title\n            titleImage\n            description\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default BlogList"],"sourceRoot":""}